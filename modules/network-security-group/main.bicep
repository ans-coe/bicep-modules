targetScope = 'resourceGroup'

@description('The location of created resources.')
param location string = resourceGroup().location

@description('Tags applied to created resources.')
param tags object = {}

@description('The name of the network security group.')
param name string

type applicationSecurityGroupType = [{
  id: string
  location: string
}]

type rulesType = {
  *: {
    access: string
    description: string?

    destinationAddressPrefix: string?
    destinationAddressPrefixes: array?
    destinationApplicationSecurityGroups: applicationSecurityGroupType?
    destinationPortRange: string?
    destinationPortRanges: array?
    direction: string
    priority: int
    protocol: string
    sourceAddressPrefix: string?
    sourceAddressPrefixes: array?
    sourceApplicationSecurityGroups: applicationSecurityGroupType?
    sourcePortRange: string?
    sourcePortRanges: array?
  }
}

@description('Rules to add to the network security group')
param rules rulesType = {}

resource rNetworkSecurityGroup 'Microsoft.Network/networkSecurityGroups@2023-04-01' = {
  name: name
  location: location
  tags: tags
  properties: {
    securityRules: [for rule in items(rules) : {
      name: rule.key
      properties: {
        access: rule.value.access
        description: contains(rule.value, 'description') ? rule.value.description : 'Rule generated by Bicep'
        destinationAddressPrefix: contains(rule.value, 'destinationAddressPrefix') ? rule.value.destinationAddressPrefix : null
        destinationAddressPrefixes: contains(rule.value, 'destinationAddressPrefixes') ? rule.value.destinationAddressPrefixes : null
        destinationApplicationSecurityGroups: contains(rule.value, 'destinationApplicationSecurityGroups') ? rule.value.destinationApplicationSecurityGroups : null
        destinationPortRange: contains(rule.value, 'destinationPortRange') ? rule.value.destinationPortRange : null
        destinationPortRanges: contains(rule.value, 'destinationPortRanges') ? rule.value.destinationPortRanges : null
        direction: rule.value.direction
        priority: rule.value.priority
        protocol: rule.value.protocol
        sourceAddressPrefix: contains(rule.value, 'sourceAddressPrefix') ? rule.value.sourceAddressPrefix : null
        sourceAddressPrefixes: contains(rule.value, 'sourceAddressPrefixes') ? rule.value.sourceAddressPrefixes : null
        sourceApplicationSecurityGroups: contains(rule.value, 'sourceApplicationSecurityGroups') ? rule.value.sourceApplicationSecurityGroups : null
        sourcePortRange: contains(rule.value, 'sourcePortRange') ? rule.value.sourcePortRange : null
        sourcePortRanges: contains(rule.value, 'sourcePortRanges') ? rule.value.sourcePortRanges : null
      }
    }]
  }
}

@description('The resource group the network security group was deployed into.')
output resourceGroupName string = resourceGroup().name

@description('The name of the network security group.')
output name string = rNetworkSecurityGroup.name

@description('The resource ID of the network security group.')
output resourceId string = rNetworkSecurityGroup.id

@description('The location the resource was deployed into.')
output location string = rNetworkSecurityGroup.location
